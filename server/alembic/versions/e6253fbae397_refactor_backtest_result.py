"""Refactor backtest_result

Revision ID: e6253fbae397
Revises: 6c69722786c6
Create Date: 2025-05-26 09:35:47.653513

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e6253fbae397'
down_revision: Union[str, None] = '6c69722786c6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_backtest_results_id', table_name='backtest_results')
    op.drop_table('backtest_results')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest_results',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('strategy_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('ticker', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('equity_curve', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('trades', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], name='backtest_results_strategy_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='backtest_results_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='backtest_results_pkey')
    )
    op.create_index('ix_backtest_results_id', 'backtest_results', ['id'], unique=False)
    # ### end Alembic commands ###
